name: build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  job-test:
    name: Test
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: true

      - name: Run lint
        uses: reviewdog/action-golangci-lint@v2

      - name: Run tests
        run: make ci

      - name: Run octocov
        uses: k1LoW/octocov-action@v0

  job-run-test:
    name: Setup test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      DEBUG: true
    steps:
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: true

      - name: Run setup test
        run: |
          go run cmd/gh-setup/main.go --repo k1LoW/colr --version v1.1.1 --force
          colr -v
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest version
        id: latest_version
        run: |
          echo -n 'version=' > $GITHUB_OUTPUT
          gh release list --limit 1 | cut -f 1 >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
        shell: bash

      - name: Run setup as a action (1/2)
        uses: ./
        with:
          repo: k1LoW/tbls
          force: true
          strict: true
          gh-setup-version: ${{ steps.latest_version.outputs.version }}

      - name: Run setup as a action (2/2)
        run: tbls version
        shell: bash

  job-on-container-test:
    name: Test on container
    runs-on: ubuntu-latest
    container:
      image: debian:latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      DEBUG: true
    steps:
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Set up gh-setup
        uses: k1LoW/gh-setup@v1
        with:
          repo: cli/cli
          bin-match: bin/gh$
          match: tar.gz$

      - name: Get latest version
        id: latest_version
        run: |
          echo -n 'version=' > $GITHUB_OUTPUT
          gh release list --limit 1 | cut -f 1 >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

      - name: Run setup as a action (1/2)
        uses: ./
        with:
          repo: k1LoW/tbls
          force: true
          strict: true
          gh-setup-version: ${{ steps.latest_version.outputs.version }}

      - name: Run setup as a action (2/2)
        run: tbls version
        shell: bash
